{"version":3,"sources":["components/cookie/cookie.svg","components/cookie/cookie.module.css","Context.js","components/cookie/index.js","components/authentication/index.js","App.js","serviceWorker.js","index.js","components/authentication/authentication.module.css"],"names":["module","exports","React","createContext","Cookie","user","useState","clicks","setClicks","useEffect","cookie","document","querySelector","styles","container","cookieContainer","style","width","height","marginTop","setTimeout","animateCookie","className","component","topLine","name","src","CookieImage","onClick","e","alt","getSend","updateUser","then","response","success","console","log","message","data","a","axios","post","login","register","basicBuild","text","AuthenticationComponent","useRef","pw","lowertext","toLowerCase","type","ref","placeholder","required","getValue","value","input","current","App","loginRegister","setUser","password","trim","getUser","new_user","act","catch","err","newUser","createUser","getLoginAndRegister","params","Boolean","window","location","hostname","match","require","config","process","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.0e0c7f42.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cookie.40d27da8.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"cookie_component__13Qtu\",\"cookie\":\"cookie_cookie__29Eft\",\"cookieContainer\":\"cookie_cookieContainer__hZc6m\"};","import React from \"react\";\r\n\r\nconst UserContext = React.createContext(null);\r\n\r\nexport default UserContext;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport CookieImage from \"./cookie.svg\";\r\n\r\nimport styles from \"./cookie.module.css\";\r\nimport axios from \"axios\";\r\n\r\nimport UserContext from \"../../Context\";\r\n\r\nexport default function Cookie({ user }) {\r\n  const [clicks, setClicks] = useState(user.clicks);\r\n\r\n  useEffect(() => {\r\n    setClicks(user.clicks);\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    animateCookie(clicks);\r\n  }, [clicks]);\r\n\r\n  return (\r\n    <div className={styles.component}>\r\n      <span className={styles.topLine}>\r\n        Username: <span className=\"username\">{user.name}</span>\r\n      </span>\r\n      <div className={styles.cookieContainer}>\r\n        <img\r\n          src={CookieImage}\r\n          onClick={(e) => setClicks(clicks + 1)}\r\n          className={styles.cookie}\r\n          alt=\"Cookie\"\r\n        />\r\n      </div>\r\n      <br />\r\n      <span>\r\n        clicks: <span className=\"click\">{clicks}</span>\r\n      </span>\r\n      <button className=\"send\" onClick={getSend(user, clicks)}>\r\n        update clicks to server\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction animateCookie(clicks) {\r\n  const cookie = document.querySelector(\".\" + styles.cookie);\r\n  const container = document.querySelector(\".\" + styles.cookieContainer);\r\n\r\n  if (cookie) {\r\n    container.style.width = clicks + 100 + \"px\";\r\n    container.style.height = clicks + 100 + \"px\";\r\n\r\n    cookie.style.marginTop = \"-10px\";\r\n    setTimeout(() => {\r\n      cookie.style.width = clicks + 100 + \"px\";\r\n      cookie.style.height = clicks + 100 + \"px\";\r\n      cookie.style.marginTop = \"0\";\r\n    }, 500);\r\n  }\r\n}\r\n\r\nfunction getSend(user, clicks) {\r\n  return (e) => {\r\n    if (user.name !== \"Guest\") {\r\n      updateUser({\r\n        ...user,\r\n        clicks: clicks,\r\n      }).then((response) => {\r\n        if (!response.success) {\r\n          console.log(response.message);\r\n        }\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\nexport async function updateUser(data) {\r\n  return await axios.post(\"/api/update\", data);\r\n}\r\n","import React, { useRef } from \"react\";\r\n\r\nimport styles from \"./authentication.module.css\";\r\n\r\nexport default ({ login, register }) => {\r\n  return (\r\n    <div className={styles.basicBuild}>\r\n      <AuthenticationComponent\r\n        text=\"Register\"\r\n        styles={styles.register}\r\n        onClick={register}\r\n      />\r\n      <AuthenticationComponent\r\n        text=\"Login\"\r\n        styles={styles.login}\r\n        onClick={login}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AuthenticationComponent = ({ text, styles, onClick }) => {\r\n  const name = useRef(null);\r\n  const pw = useRef(null);\r\n\r\n  const lowertext = text.toLowerCase();\r\n  return (\r\n    <div className={styles + \" \" + lowertext}>\r\n      <h3>{text}</h3>\r\n      <form>\r\n        <input\r\n          type=\"text\"\r\n          ref={name}\r\n          className=\"name\"\r\n          placeholder=\"enter name\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          ref={pw}\r\n          className=\"password\"\r\n          placeholder=\"enter password\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"button\"\r\n          className={\"button\"}\r\n          onClick={(e) => onClick(getValue(name), getValue(pw))}\r\n          value={lowertext}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction getValue(input) {\r\n  return input.current.value;\r\n}\r\n","import React, { useRef, useState } from \"react\";\n\nimport Cookie from \"./components/cookie/\";\nimport \"./App.css\";\n\nimport axios from \"axios\";\nimport { act } from \"react-dom/test-utils\";\n\nimport Authentication from \"./components/authentication\";\n\n\nexport default function App() {\n  const [user, setUser] = useState({ name: \"Guest\", clicks: 0 });\n\n  const loginRegister = getLoginAndRegister(user, setUser);\n\n  return (\n    <div className=\"App\">\n        <Cookie user={user} />\n        <Authentication {...loginRegister} />\n    </div>\n  );\n}\n\nfunction getLoginAndRegister(user, setUser) {\n  const login = (name, password) => {\n    if (name.trim() && password.trim()) {\n      getUser({\n        name: name,\n        password: password,\n      })\n        .then((response) => {\n          const new_user = response.data.user;\n          new_user.clicks = new_user.clicks + user.clicks;\n          act(() => setUser(new_user));\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  const register = (name, password) => {\n    const clicks = user.name === \"Guest\" ? user.clicks : 0;\n    if (name.trim() && password.trim()) {\n      const newUser = {\n        name: name,\n        password: password,\n        clicks: clicks,\n      };\n      createUser(newUser)\n        .then((response) => {\n          act(() => setUser(newUser));\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n  return { login: login, register: register };\n}\n\nexport async function getUser(params) {\n  return await axios.post(\"/api/get\", params);\n}\n\nexport async function createUser(params) {\n  return await axios.post(\"/api/create\", params);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nrequire(\"dotenv\").config();\nconsole.log(process.env);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"basicBuild\":\"authentication_basicBuild__346eT\",\"register\":\"authentication_register__lAgwa\",\"login\":\"authentication_login__34W5x\"};"],"sourceRoot":""}